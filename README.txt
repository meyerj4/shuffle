This program is a solution to the following problem:
Input a single integer N. Output the integers 1..N in random order. Optimize for speed.

The solution contains multiple possible solution with the most efficient in the final implementation. Things to note include clean coding style, small classes, use of interfaces and nice object oriented design and, of course, an efficient solution to the problem. I tried multiple approaches to the problem. My first attempt of swapping all elements of an array with random elements (ArrayElementSwappingShuffler) turned out to be the most efficient (O(N)). I also tried using std::random_shuffle() which turned out the be slightly less efficient (but still O(N)). Using any type of collection other than array was always less efficient and usually resulted in an O(N^2) algorithm. I included a hash map-based algorithm (HashMapShuffler) I was curious about. It's performance was, shall we say, suboptimal.